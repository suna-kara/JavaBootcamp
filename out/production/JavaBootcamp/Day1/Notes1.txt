Data Types:
1.Primitive Data Types:
  byte< short< int < long< float<double

2.Non-primitive Data Types
include all of the objects

Type Castings:
    1.Primitive Type Casting
         1.1 implicit casting: casting smaller primitive type to larger primitive type
         1.2 Explicit casting : casting larger primitive type to smaller primitive type


    2. Reference Type casting
         2.1 Upcasting   : casting smaller reference type to larger reference type
         2.2 Down-casting : casting larger reference type to smaller reference type


  Wrapper Classes: the objects that represents the primitives

  String : char sequences. IMMUTABLE
           "Java"
           new String("Java")

        String Methods: charAt, length, lower & upper,substring,equals,contains,startsWith,endsWith,split,toCharArray
            indexOf,lastİndexOf

  StringBUilder : char sequences. MUTABLE
                  new StringBuilder("Java")

  StringBuffer :char sequences. MUTABLE
                    new StringBuffer("Java")

   Loops: repeated actions
         for loop: if the number of iteration is fixed
             for(initialization; condition; Iteration){
                  statements
             }
         while loop: if the number of iteration is NOT fixed,and we want it to be iterated until condition is false
             while(Condition){
             statements
             }

Array:size is fixed
           Has Index
           Supports primitives & non- primitives
           Can be Multi-dimensional

 For Each: MUST be applied to data structures
          Iteration order is fixed (beginning to end) (baştan sona alıyor çok kullanışlı bu yüzden)


 Custom Method: Function
                grouping a series of code fragments  that can perform a task
                improves the reusability

   Access- Modifier     Specifier     return-Type  methodName(Parameters){
         code fragments that can perform the task;
   }


   Access-Modifier: public, protected, default, private
   Specifier: static ,final,abstract,synchronized
   ReturnType: void,Data types(int , String ...)
   MethodName: any name
   Parameter: Data Type

 Method Overloading: multiple different methods sharing













